name: build provisioningVM
on: push

jobs:
  build-VMs:
    name: Setup and Configure VM
    runs-on: iede
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: SSH CONFIG FILE
        run: |
          touch /home/adminuser/.ssh/config
          echo "Host *" > /home/adminuser/.ssh/config
          echo "  StrictHostKeyChecking no" >> /home/adminuser/.ssh/config

      - name: Create directory for repo
        run: sudo mkdir -p /opt/pertclinic
      
      - name: Set ownership of directory
        run: sudo chown adminuser:adminuser /opt/pertclinic
      
      - name: Clone repo
        run: sudo -u adminuser git clone -b pet-iede https://github.com/sennahoj123/pertclinic.git /opt/pertclinic

      - name: Terraform Init
        working-directory: terraform-azure
        run: terraform init

      - name: Import azurerm_network_interface
        run: |
          terraform import azurerm_network_interface.az_ni[0] /subscriptions/41e50375-b926-4bc4-9045-348f359cf721/resourceGroups/iede_adu-rg/providers/Microsoft.Network/networkInterfaces/vm0-ni
          terraform import azurerm_network_interface.az_ni[1] /subscriptions/41e50375-b926-4bc4-9045-348f359cf721/resourceGroups/iede_adu-rg/providers/Microsoft.Network/networkInterfaces/vm1-ni
          terraform import azurerm_network_interface.az_ni[2] /subscriptions/41e50375-b926-4bc4-9045-348f359cf721/resourceGroups/iede_adu-rg/providers/Microsoft.Network/networkInterfaces/vm2-ni
        working-directory: terraform-azure

      - name: Import azurerm_public_ip
        run: |
          terraform import azurerm_public_ip.az_ip[0] /subscriptions/41e50375-b926-4bc4-9045-348f359cf721/resourceGroups/iede_adu-rg/providers/Microsoft.Network/publicIPAddresses/vm0
          terraform import azurerm_public_ip.az_ip[1] /subscriptions/41e50375-b926-4bc4-9045-348f359cf721/resourceGroups/iede_adu-rg/providers/Microsoft.Network/publicIPAddresses/vm1
          terraform import azurerm_public_ip.az_ip[2] /subscriptions/41e50375-b926-4bc4-9045-348f359cf721/resourceGroups/iede_adu-rg/providers/Microsoft.Network/publicIPAddresses/vm2
        working-directory: terraform-azure

      - name: Check if VM0 exists
        id: check_vm0
        run: |
          result=$(az vm show --resource-group iede_adu-rg --name production --query id --output tsv || echo "notfound")
          echo "::set-output name=vm0_exists::$result"

      - name: Import VM0 if it exists
        if: steps.check_vm0.outputs.vm0_exists != 'notfound'
        run: |
          terraform import azurerm_linux_virtual_machine.az_vm[0] /subscriptions/41e50375-b926-4bc4-9045-348f359cf721/resourceGroups/iede_adu-rg/providers/Microsoft.Compute/virtualMachines/production

      - name: Terraform Apply
        working-directory: terraform-azure
        run: terraform apply -auto-approve

      - name: Terraform Init
        working-directory: terraform-azure
        run: terraform init

      - name: Output Public IP Addresses
        working-directory: terraform-azure
        run: sleep 10 && terraform output -json > /opt/pertclinic/terraform-azure/ip_addresses.json

      - name: Check IP Addresses File
        run: cat /opt/pertclinic/terraform-azure/ip_addresses.json

      - name: Update Hosts File
        run: python3 /opt/pertclinic/terraform-azure/ip_input.py

      - name: Check Updated Hosts File
        run: cat /opt/pertclinic/ansible/hosts
        
      - name: Check connection
        run: ansible all -i /opt/pertclinic/ansible/hosts -u adminuser -m command -a "uptime"

  testing-VM:
    name: Bootstrap testing
    runs-on: iede
    needs: build-VMs
    steps:
      - name: Testing Playbook
        run: ansible-playbook -i /opt/pertclinic/ansible/hosts /opt/pertclinic/ansible/main-testing.yml

      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-results
          path: /opt/testresultsiede.jtl
          if-no-files-found: error

  acceptance-VM:
    name: Bootstrap acceptance
    runs-on: iede
    needs: testing-VM
    steps:
      - name: Acceptance Playbook
        run: ansible-playbook -i /opt/pertclinic/ansible/hosts /opt/pertclinic/ansible/main-acceptance.yml
  
  production-VM:
    name: Bootstrap production
    runs-on: iede
    needs: acceptance-VM
    steps:
      - name: Production Playbook
        run: ansible-playbook -i /opt/pertclinic/ansible/hosts /opt/pertclinic/ansible/main-production.yml

  Destroy:
    name: Terraform Destroy & rm git repo
    runs-on: iede
    needs: production-VM
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        
      - name: Destroy testing & acceptance
        run: terraform destroy -target=azurerm_linux_virtual_machine.az_vm[1] target=azurerm_linux_virtual_machine.az_vm[2] -auto-approve
            
      - name: rm git repo
        run: sudo rm -r /opt/pertclinic 

