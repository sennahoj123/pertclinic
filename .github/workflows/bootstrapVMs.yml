name: build provisioningVM
on: push

jobs:
  build-VMs:
    name: Setup and Configure VM
    runs-on: iede
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: SSH CONFIG FILE
        run: |
          touch /home/adminuser/.ssh/config
          echo "Host *" > /home/adminuser/.ssh/config
          echo "  StrictHostKeyChecking no" >> /home/adminuser/.ssh/config


      - name: Terraform Init
        working-directory: terraform-azure
        run: terraform init

      - name: Terraform Apply
        working-directory: terraform-azure
        run: terraform apply -auto-approve

      - name: Output Public IP Addresses
        working-directory: terraform-azure
        run: terraform output -json > /opt/pertclinic/terraform-azure/ip_addresses.json

      - name: Check IP Addresses File
        run: cat /opt/pertclinic/terraform-azure/ip_addresses.json

      - name: Update Hosts File
        run: python3 /opt/pertclinic/terraform-azure/ip_input.py

      - name: Check Updated Hosts File
        run: cat /opt/pertclinic/ansible/hosts
        
      - name: Check connection
        run: ansible all -i /opt/pertclinic/ansible/hosts -u adminuser -m command -a "uptime"

  testing-VM:
    name: Bootstrap testing
    runs-on: iede
    needs: build-VMs
    steps:
      - name: Testing Playbook
        run: ansible-playbook -i /opt/pertclinic/ansible/hosts /opt/pertclinic/ansible/main-testing.yml
  
  acceptance-VM:
    name: Bootstrap acceptance
    runs-on: iede
    needs: testing-VM
    steps:
      - name: Acceptance Playbook
        run: ansible-playbook -i /opt/pertclinic/ansible/hosts /opt/pertclinic/ansible/main-acceptance.yml
  
  production-VM:
    name: Bootstrap production
    runs-on: iede
    needs: acceptance-VM
    steps:
      - name: Production Playbook
        run: ansible-playbook -i /opt/pertclinic/ansible/hosts /opt/pertclinic/ansible/main-production.yml
